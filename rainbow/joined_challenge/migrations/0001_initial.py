# Generated by Django 3.1.6 on 2021-07-13 15:52

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('challenge', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('article_name', models.TextField(blank=True, null=True, verbose_name='name of the article')),
                ('article_url', models.URLField(blank=True, null=True, verbose_name='link to the article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventOrganizerJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_name', models.TextField(blank=True, null=True, verbose_name='name of the event')),
                ('event_url', models.URLField(blank=True, null=True, verbose_name='link to the event website or Facebook page if there is one')),
                ('event_description', models.TextField(verbose_name='description of the event in your own words')),
                ('organized_alone', models.BooleanField(blank=True, null=True, verbose_name='if this event was organized by you alone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventParticipantJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('joined', 'joined'), ('completed', 'completed'), ('pending', 'pending'), ('cancelled', 'cancelled'), ('confirmed', 'confirmed')], default='joined', max_length=255, verbose_name='status')),
                ('challenge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='challenge.challenge', verbose_name='challenge')),
            ],
        ),
        migrations.CreateModel(
            name='SupportJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('other_organization', models.CharField(blank=True, help_text='only if organization on challenge is Other', max_length=1000, null=True, verbose_name='Other organization')),
                ('main_joined_challenge', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='joined_challenge.joinedchallenge', verbose_name='main joined challenge')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoryJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('story_url', models.URLField(blank=True, null=True, verbose_name='link to the story if it has one')),
                ('description', models.TextField(verbose_name='description of your story')),
                ('main_joined_challenge', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='joined_challenge.joinedchallenge', verbose_name='main joined challenge')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolGSAJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('main_joined_challenge', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='joined_challenge.joinedchallenge', verbose_name='main joined challenge')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReactingJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reaction_description', models.TextField(verbose_name='description of the reaction in your own words')),
                ('main_joined_challenge', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='joined_challenge.joinedchallenge', verbose_name='main joined challenge')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectJoinedChallenge',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_name', models.TextField(blank=True, null=True, verbose_name='name of the event')),
                ('project_url', models.URLField(blank=True, null=True, verbose_name='link to the event website or Facebook page if there is one')),
                ('project_description', models.TextField(verbose_name='description of the event in your own words')),
                ('implemented_alone', models.BooleanField(blank=True, null=True, verbose_name='if this project was implemented by you alone')),
                ('main_joined_challenge', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='joined_challenge.joinedchallenge', verbose_name='main joined challenge')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
